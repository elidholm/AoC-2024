---
name: Ansible CI
on:
  push:
  pull_request:
    branches:
      - master

jobs:
  yamllint:
    name: YAML
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Yamllint
        uses: karancode/yamllint-github-action@master
        with:
          yamllint_file_or_dir: .
          yamllint_strict: false
          yamllint_comment: true
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ruff-pylint-flake8-isort-mypy:
    name: Python
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install pylint mypy rich flake8 isort ruff

      - name: Lint with ruff
        run: ruff check $(git ls-files '*.py')

      - name: Lint with pylint
        run: pylint $(git ls-files '*.py')

      - name: Lint with flake8
        run: flake8 $(git ls-files '*.py')

      - name: Lint with isort
        run: isort $(git ls-files '*.py')

      - name: Type check with mypy
        if: "!cancelled()"
        run: mypy $(git ls-files '*.py')

  ziglint:
    name: Zig
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install ziglint
        uses: AnnikaCodes/install-ziglint@v0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint code
        run: ziglint $(git ls-files '*.zig')

  hlint:
    name: Haskell
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up HLint
        uses: rwe/actions-hlint-setup@v1
        with:
          version: 3.1.6

      - name: Run HLint
        uses: rwe/actions-hlint-run@v2
        with:
          path: solutions/

  shellcheck:
    name: Bash
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        env:
          SHELLCHECK_OPTS: -e SC2076

  actionlint:
    name: GitHub Actions
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run actionlint on workflows
        uses: raven-actions/actionlint@v2
        with:
          flags: -ignore SC2046

  cpplint:
    name: C++
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install cpplint
        run: pip install cpplint

      - name: Lint code
        run: |
          cpplint \
            --recursive \
            --filter=-whitespace/line_length,-runtime/string,-runtime/references \
            $(git ls-files '*.cpp')

  luacheck:
    name: Lua
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Luacheck linter
        uses: lunarmodules/luacheck@v1

  ktlint:
    name: Kotlin
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run ktlint
        uses: ScaCap/action-ktlint@master
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-check

  eslint:
    name: JavaScript
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install node packages
        run: npm ci

      - name: Run ESLint
        run: npm run lint

